diff a/app/lib/Services/user_services.dart b/app/lib/Services/user_services.dart	(rejected hunks)
@@ -3,6 +3,7 @@ import 'package:app/Model/user/user_model.dart';
 import 'package:app/constants/fb_collection.dart';
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:firebase_auth/firebase_auth.dart';
+import 'package:http/http.dart' as http;
 
 class UserServices {
   static CreateUserRequestBody? userData = CreateUserRequestBody(
@@ -53,7 +54,7 @@ class UserServices {
             userData?.name = querySnapshot.docs.first['name'] ?? "";
             userData?.email = querySnapshot.docs.first['email'] ?? "";
             userData?.phone = querySnapshot.docs.first['phone'] ?? "";
-            for(var el in querySnapshot.docs.first['orderHistory'] ?? []) {
+            for (var el in querySnapshot.docs.first['orderHistory'] ?? []) {
               userData?.orderHistory!.add(OrderModel.fromJson(el));
             }
             print("object: ${userData?.orderHistory}");
@@ -69,4 +70,24 @@ class UserServices {
       return false;
     }
   }
+
+  static Future<bool> resetPassword(String password, String oobCode) async {
+    try {
+      FirebaseAuth instance = FirebaseAuth.instance;
+
+      try {
+        print(
+            "Trying out of band code that's $oobCode, setting the password to $password");
+        await instance.confirmPasswordReset(
+            code: oobCode, newPassword: password);
+      } catch (e) {
+        print("Couldn't reset password, error: $e");
+        return false;
+      }
+      return true;
+    } catch (e) {
+      print(e);
+      return false;
+    }
+  }
 }
